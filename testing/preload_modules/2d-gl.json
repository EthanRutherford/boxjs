{"entry":"/lib/2d-gl.js","files":{"lib":{"2d-gl.js":{"/code":"module.exports={Renderer:require(\"./core/renderer\"),Scene:require(\"./core/scene\"),ImageLoader:require(\"./core/image-loader\"),rgba:require(\"./core/rgba\"),builtIn:{Shape:require(\"./shape/shape\"),OrthoCamera:require(\"./core/ortho-camera\"),VectorMaterial:require(\"./vector/vector-material\"),SpriteMaterial:require(\"./sprite/sprite-material\")},shaders:{PostProcess:require(\"./post-process/post-process-shader\"),MotionBlur:require(\"./post-process/blur-shader\"),BackgroundShader:require(\"./background/background-shader\")}};"},"background":{"background-shader.js":{"/code":"const{mat4:mat4}=require(\"gl-matrix\"),ShaderProgram=require(\"../core/shader-program\"),copyVertShader=`\\n\\tattribute vec2 aVPoint;\\n\\tvarying highp vec2 vCoord;\\n\\tvoid main() {\\n\\t\\tvCoord = (aVPoint.xy * .5) + .5;\\n\\t\\tgl_Position = vec4(aVPoint, .9999999, 1);\\n\\t}\\n`,copyFragShader=`\\n\\tuniform sampler2D uFboTex;\\n\\tvarying highp vec2 vCoord;\\n\\tvoid main() {\\n\\t\\tgl_FragColor = texture2D(uFboTex, vCoord);\\n\\t}\\n`;class CopyShader extends ShaderProgram{constructor(r){super(r,copyVertShader,copyFragShader),this.fboTex=r.createTexture(),r.bindTexture(r.TEXTURE_2D,this.fboTex),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.LINEAR),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR),this.rbo=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,this.rbo),this.fbo=r.createFramebuffer(),r.bindFramebuffer(r.FRAMEBUFFER,this.fbo),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,this.fboTex,0),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,this.rbo),r.bindTexture(r.TEXTURE_2D,null),r.bindRenderbuffer(r.RENDERBUFFER,null),r.bindFramebuffer(r.FRAMEBUFFER,null),this.aVPoint=r.getAttribLocation(this.program,\"aVPoint\"),r.enableVertexAttribArray(this.aVPoint)}resize(r,t){if(this.width===r&&this.height===t)return;const e=this.gl;e.bindTexture(e.TEXTURE_2D,this.fboTex),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,r,t,0,e.RGBA,e.UNSIGNED_BYTE,null),e.bindRenderbuffer(e.RENDERBUFFER,this.rbo),e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,r,t),e.bindTexture(e.TEXTURE_2D,null),e.bindRenderbuffer(e.RENDERBUFFER,null)}}const bgVertShader=`\\n\\tattribute vec2 aVPoint;\\n\\tuniform mat4 uIPMatrix;\\n\\tvarying highp vec2 vWorld;\\n\\tvoid main() {\\n\\t\\tvWorld = (uIPMatrix * vec4(aVPoint, 0, 1)).xy;\\n\\t\\tgl_Position = vec4(aVPoint, 0, 1);\\n\\t}\\n`;class BackgroundShader extends ShaderProgram{constructor(r,t){super(r,bgVertShader,t),this.copyShader=new CopyShader(r),this.aVPoint=r.getAttribLocation(this.program,\"aVPoint\"),r.enableVertexAttribArray(this.aVPoint),this.uIPMatrix=r.getUniformLocation(this.program,\"uIPMatrix\"),this.vertBuf=r.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vertBuf),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([-1,1,-1,-1,1,-1,1,1]),this.gl.STATIC_DRAW)}resize(r,t){this.copyShader.resize(r,t)}copyIntoBuffer(){const r=this.gl;r.useProgram(this.copyShader.program),r.bindTexture(r.TEXTURE_2D,this.copyShader.fboTex),r.bindBuffer(r.ARRAY_BUFFER,this.vertBuf),r.vertexAttribPointer(this.aVPoint,2,r.FLOAT,!1,0,0),r.drawArrays(r.TRIANGLE_FAN,0,4)}build(r){const t=this.gl;t.useProgram(this.program);const e=mat4.create();mat4.invert(e,r),this.gl.uniformMatrix4fv(this.uIPMatrix,!1,e),t.bindFramebuffer(t.FRAMEBUFFER,this.copyShader.fbo),t.bindBuffer(t.ARRAY_BUFFER,this.vertBuf),t.vertexAttribPointer(this.aVPoint,2,t.FLOAT,!1,0,0),this.bind instanceof Function&&this.bind(),t.drawArrays(t.TRIANGLE_FAN,0,4)}}module.exports=BackgroundShader;"}},"core":{"shader-program.js":{"/code":"function compileShader(r,e,a){const o=r.createShader(a);if(r.shaderSource(o,e),r.compileShader(o),!r.getShaderParameter(o,r.COMPILE_STATUS))throw new Error(r.getShaderInfoLog(o));return o}function linkShaderProgram(r,e,a){const o=r.createProgram();if(r.attachShader(o,e),r.attachShader(o,a),r.linkProgram(o),!r.getProgramParameter(o,r.LINK_STATUS))throw new Error(\"Could not initialize shader\");return o}class ShaderProgram{constructor(r,e,a){this.gl=r;const o=compileShader(r,e,r.VERTEX_SHADER),t=compileShader(r,a,r.FRAGMENT_SHADER);this.program=linkShaderProgram(r,o,t)}}module.exports=ShaderProgram;"},"ortho-camera.js":{"/code":"const{mat4:mat4}=require(\"gl-matrix\");class OrthoCamera{constructor(t=0,i=0,s=1){this._x=t,this._y=i,this._zoom=s,this._dirty=!1,this._aspect=1,this._pMatrix=mat4.create(),this._recreateMatrix()}get x(){return this._x}set x(t){this._x!==t&&(this._x=t,this._dirty=!0)}get y(){return this._y}set y(t){this._y!==t&&(this._y=t,this._dirty=!0)}get zoom(){return this._zoom}set zoom(t){this._zoom!==t&&(this._zoom=t,this._dirty=!0)}set({x:t,y:i,zoom:s}){null!=t&&(this.x=t),null!=i&&(this.y=i),null!=s&&(this.zoom=s)}getBounds(){const{hw:t,hh:i}=this._getHalfDims();return{x0:this._x-t,x1:this._x+t,y0:this._y-i,y1:this._y+i,w:2*t,h:2*i}}getMatrix(t){return t!==this._aspect&&(this._aspect=t,this._dirty=!0),this._recreateMatrix(),this._pMatrix}_getHalfDims(){return{hw:this._zoom*this._aspect/2,hh:this._zoom/2}}_recreateMatrix(){if(!this._dirty)return;this._dirty=!1;const{hw:t,hh:i}=this._getHalfDims(),{x:s,y:h}=this;mat4.ortho(this._pMatrix,s-t,s+t,h-i,h+i,0,-1)}}module.exports=OrthoCamera;"},"rgba.js":{"/code":"module.exports=((e,o,r,a=1)=>({r:e,g:o,b:r,a:a}));"},"image-loader.js":{"/code":"const images={},createImage=window.createImageBitmap?(e,s)=>{s(createImageBitmap(e))}:(e,s)=>{const o=new Image;o.src=URL.createObjectURL(e),o.onload=(()=>s(o))};class ImageLoader{constructor(){this.names=new Set,this.onProgress=null}get(e,s){if(this.names.add(e),!(e in images)){const o={progress:0};images[e]=o,o.promise=new Promise((e,r)=>{const t=new XMLHttpRequest;t.responseType=\"blob\",t.onerror=(()=>r(`${s} not found`)),t.onload=(()=>createImage(t.response,e)),t.onprogress=(e=>{o.progress=e.loaded/e.total,this.onProgress instanceof Function&&this.onProgress(this.getTotalProgress())}),t.open(\"GET\",s,!0),t.send()})}return images[e].promise}all(){const e=[...this.names].map(e=>images[e].promise);return Promise.all(e)}getTotalProgress(){const e=[...this.names];return e.reduce((e,s)=>e+images[s].progress,0)/e.length}}module.exports=ImageLoader;"},"scene.js":{"/code":"class Scene{constructor({renderables:e,getVisibleFunc:s,bgColor:r}){this.getVisibleFunc=s||(()=>[...this.renderables]),this.renderables=new Set(e),this.bgColor=r,this.backgroundShader=null,this.postProcessing=[]}setBackgroundShader(e){this.backgroundShader=e}addPostProcShader(e){this.postProcessing.push(e)}removePostProcShader(e){this.postProcessing.splice(this.postProcessing.indexOf(e),1)}getFbo(e){return e>=this.postProcessing.length?null:this.postProcessing[e].fbo}add(e){this.renderables.add(e)}has(e){return this.renderables.has(e)}delete(e){this.renderables.delete(e)}getVisible(e){return this.getVisibleFunc(e,this.renderables)}}module.exports=Scene;"},"renderer.js":{"/code":"function calcZ(e,t){return 1-(16e3*Math.max(0,Math.min(999,Math.floor(t)))+(e%16e3+2))/16e6}function computeRenderableMapCore(e,t,r){e.has(t.shader)||e.set(t.shader,[]);const{id:s,x:i,y:a,r:h,zIndex:n}=t,o=mat4.create();mat4.fromTranslation(o,[i,a,0]),mat4.rotateZ(o,o,h),r&&mat4.multiply(o,r,o),e.get(t.shader).push({item:t,mvMatrix:o});const c=t.getChildren();for(const t of c)computeRenderableMapCore(e,t,o);mat4.translate(o,o,[0,0,calcZ(s,n)])}function computeRenderableMap(e,t){return computeRenderableMapCore(e,t),e}const{mat4:mat4}=require(\"gl-matrix\"),VectorShader=require(\"../vector/vector-shader\"),SpriteShader=require(\"../sprite/sprite-shader\"),Renderable=require(\"./renderable\");class Renderer{constructor(e=null){if(this.frameNumber=0,this.canvas=e||document.createElement(\"canvas\"),this.gl=this.canvas.getContext(\"webgl2\"),!this.gl)throw new Error(\"could not initialize WebGL\");this.gl.enable(this.gl.BLEND),this.gl.enable(this.gl.DEPTH_TEST),this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA),this.aspect=0,this.shaders=new Map;const t=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([]),this.gl.STATIC_DRAW),this.gl.vertexAttribPointer(0,2,this.gl.FLOAT,!1,0,0),this.gl.vertexAttribPointer(1,2,this.gl.FLOAT,!1,0,0),this.gl.vertexAttribPointer(2,2,this.gl.FLOAT,!1,0,0),this.gl.vertexAttribPointer(3,2,this.gl.FLOAT,!1,0,0),this.createShader(VectorShader),this.createShader(SpriteShader)}createShader(e){return this.shaders.has(e)||this.shaders.set(e,new e(this.gl)),this.shaders.get(e)}getInstance(e,t){const r=this.shaders.get(t.shaderType),s=e.getParams(this.gl),i=t.getParams(this.gl),a=Object.assign({},s,i);return new Renderable(r,a)}resize(){const e=this.canvas.clientWidth,t=this.canvas.clientHeight;return t===this.canvas.height&&e===this.canvas.width||(this.canvas.width=e,this.canvas.height=t,this.gl.viewport(0,0,e,t),this.aspect=e/t),{width:e,height:t}}viewportToWorld(e,t,r){const s=e/this.canvas.width,i=1-t/this.canvas.height,{x0:a,y0:h,w:n,h:o}=r.getBounds();return{x:a+s*n,y:h+i*o}}render(e,t){const r=this.resize();t.backgroundShader&&t.backgroundShader.resize(r.width,r.height);for(const e of t.postProcessing)e.resize(r.width,r.height);const s=e.getMatrix(this.aspect);t.backgroundShader&&t.backgroundShader.build(s),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,t.getFbo(0));const i=t.bgColor;this.gl.clearColor(i.r,i.g,i.b,i.a),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),t.backgroundShader&&t.backgroundShader.copyIntoBuffer();const a=t.getVisible(e.getBounds()).reduce(computeRenderableMap,new Map);for(const[e,t]of a){this.gl.useProgram(e.program),e.setProjection(s);for(const r of t)e.setModelView(r.mvMatrix),e.render(r.item,this.frameNumber)}for(let e=0;e<t.postProcessing.length;e++){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,t.getFbo(e+1)),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),t.backgroundShader&&t.backgroundShader.copyIntoBuffer();const r=t.postProcessing[e];this.gl.useProgram(r.program),r.preRender(),r.setProjection(s);for(const[,e]of a)for(const t of e)r.setModelView(t.mvMatrix),r.render(t.item,this.frameNumber)}this.frameNumber++}}module.exports=Renderer;"},"renderable.js":{"/code":"let acc=0;class Renderable{constructor(e,s){this.id=acc++,this.shader=e,this.params=s,this.x=0,this.y=0,this.r=0,this.zIndex=0}getChildren(){return[]}}module.exports=Renderable;"}},"post-process":{"blur-shader.js":{"/code":"const{mat4:mat4}=require(\"gl-matrix\"),PostProcessShader=require(\"./post-process-shader\"),blurVertShader=`\\n\\tattribute vec2 aVPoint;\\n\\tuniform mat4 uPrevMat;\\n\\tuniform mat4 uMVMatrix;\\n\\tuniform mat4 uPMatrix;\\n\\tuniform vec2 uCenter;\\n\\tvarying highp vec2 vCoord;\\n\\tvarying highp vec2 vVel;\\n\\n\\tbool notZero(vec2 v) {\\n\\t\\treturn v.x != 0.0 && v.y != 0.0;\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\tvec4 p = uPMatrix * uMVMatrix * vec4(aVPoint, 0, 1);\\n\\t\\tvec4 prevP = uPrevMat * vec4(aVPoint, 0, 1);\\n\\t\\tvec4 c = uPMatrix * uMVMatrix * vec4(uCenter, 0, 1);\\n\\n\\t\\tvec2 motion = (p - prevP).xy;\\n\\t\\tvec2 pNorm = (p - c).xy;\\n\\t\\tvec2 n1 = notZero(pNorm) ? normalize(pNorm) : pNorm;\\n\\t\\tvec2 n2 = notZero(motion) ? normalize(motion) : motion;\\n\\t\\thighp float ratio = (dot(n1, n2) * .5) + .5;\\n\\n\\t\\tvec4 stretchP = prevP + (p - prevP) * ratio;\\n\\n\\t\\tvVel = motion * .5;\\n\\t\\tvCoord = (p.xy * .5) + .5;\\n\\t\\tgl_Position = stretchP;\\n\\t}\\n`,blurFragShader=`\\n\\tuniform sampler2D uFboTex;\\n\\tvarying highp vec2 vCoord;\\n\\tvarying highp vec2 vVel;\\n\\tvoid main() {\\n\\t\\tconst highp float samples = 16.0;\\n\\t\\thighp float weight = 1.0 / samples;\\n\\t\\thighp float step = 1.0 / (samples - 1.0);\\n\\t\\thighp vec4 acc = vec4(0, 0, 0, 0);\\n\\n\\t\\tfor (highp float i = 0.0; i < samples; i++) {\\n\\t\\t\\thighp float t = (i * step) - .5;\\n\\t\\t\\tacc += texture2D(uFboTex, (vVel * t) + vCoord);\\n\\t\\t}\\n\\n\\t\\tgl_FragColor = acc * weight;\\n\\t}\\n`;class MotionBlurShader extends PostProcessShader{constructor(t){super(t,blurVertShader,blurFragShader),this.aVPoint=t.getAttribLocation(this.program,\"aVPoint\"),t.enableVertexAttribArray(this.aVPoint),this.uPrevMat=t.getUniformLocation(this.program,\"uPrevMat\"),this.uCenter=t.getUniformLocation(this.program,\"uCenter\"),this.prevMats=new WeakMap}setProjection(t){super.setProjection(t),this.pm=mat4.clone(t)}setModelView(t){super.setModelView(t),this.mat=mat4.clone(t),mat4.mul(this.mat,this.pm,this.mat)}deblur(t){this.prevMats.delete(t)}render(t,e){const r=this.gl,n=t.params,o=this.prevMats.get(t),i=null!=o&&o.frameNumber===e?o.mat:this.mat;this.gl.uniformMatrix4fv(this.uPrevMat,!1,i),this.gl.uniform2fv(this.uCenter,n.center),r.bindBuffer(r.ARRAY_BUFFER,n.vertBuf),r.vertexAttribPointer(this.aVPoint,2,r.FLOAT,!1,0,0),r.drawArrays(n.drawMode,0,n.vertCount),this.prevMats.set(t,{frameNumber:e+1,mat:this.mat})}}module.exports=MotionBlurShader;"},"post-process-shader.js":{"/code":"const ShaderProgram=require(\"../core/shader-program\");class PostProcessShader extends ShaderProgram{constructor(e,r,t){super(e,r,t),this.fboTex=e.createTexture(),e.bindTexture(e.TEXTURE_2D,this.fboTex),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),this.rbo=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,this.rbo),this.fbo=e.createFramebuffer(),e.bindFramebuffer(e.FRAMEBUFFER,this.fbo),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,this.fboTex,0),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,this.rbo),e.bindTexture(e.TEXTURE_2D,null),e.bindRenderbuffer(e.RENDERBUFFER,null),e.bindFramebuffer(e.FRAMEBUFFER,null),this.uFboTex=e.getUniformLocation(this.program,\"uFboTex\"),this.uPMatrix=e.getUniformLocation(this.program,\"uPMatrix\"),this.uMVMatrix=e.getUniformLocation(this.program,\"uMVMatrix\")}setProjection(e){this.gl.uniformMatrix4fv(this.uPMatrix,!1,e)}setModelView(e){this.gl.uniformMatrix4fv(this.uMVMatrix,!1,e)}resize(e,r){if(this.width===e&&this.height===r)return;const t=this.gl;t.bindTexture(t.TEXTURE_2D,this.fboTex),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,e,r,0,t.RGBA,t.UNSIGNED_BYTE,null),t.bindRenderbuffer(t.RENDERBUFFER,this.rbo),t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,e,r),t.bindTexture(t.TEXTURE_2D,null),t.bindRenderbuffer(t.RENDERBUFFER,null)}preRender(){const e=this.gl;e.bindTexture(e.TEXTURE_2D,this.fboTex)}}module.exports=PostProcessShader;"}},"sprite":{"sprite-material.js":{"/code":"const SpriteParams=require(\"./sprite-params\"),SpriteShader=require(\"./sprite-shader\");class SpriteMaterial{constructor(t,a,s=!0){this.texCoords=t,this.imageData=a,this.smoothScaling=s,this.shaderType=SpriteShader}update(t){this.texCoords=t,this.params&&this.params.update(t)}getParams(t){return this.params||(this.params=new SpriteParams(t,this.texCoords,this.imageData,this.smoothScaling)),this.params}}module.exports=SpriteMaterial;"},"sprite-shader.js":{"/code":"const ShaderProgram=require(\"../core/shader-program\"),spriteVertShader=`\\n\\tattribute vec2 aVPoint;\\n\\tattribute vec2 aTCoord;\\n\\tuniform mat4 uMVMatrix;\\n\\tuniform mat4 uPMatrix;\\n\\tvarying highp vec2 vTextureCoord;\\n\\tvoid main() {\\n\\t\\tgl_Position = uPMatrix * uMVMatrix * vec4(aVPoint, 0, 1);\\n\\t\\tvTextureCoord = aTCoord;\\n\\t}\\n`,spriteFragShader=`\\n\\tvarying highp vec2 vTextureCoord;\\n\\tuniform sampler2D uSampler;\\n\\tvoid main(void) {\\n\\t\\tgl_FragColor = texture2D(uSampler, vTextureCoord.st);\\n\\t}\\n`;class SpriteShader extends ShaderProgram{constructor(t){super(t,spriteVertShader,spriteFragShader),this.aVPoint=t.getAttribLocation(this.program,\"aVPoint\"),t.enableVertexAttribArray(this.aVPoint),this.aTCoord=t.getAttribLocation(this.program,\"aTCoord\"),t.enableVertexAttribArray(this.aTCoord),this.uPMatrix=t.getUniformLocation(this.program,\"uPMatrix\"),this.uMVMatrix=t.getUniformLocation(this.program,\"uMVMatrix\"),this.uSampler=t.getUniformLocation(this.program,\"uSampler\")}setProjection(t){this.gl.uniformMatrix4fv(this.uPMatrix,!1,t)}setModelView(t){this.gl.uniformMatrix4fv(this.uMVMatrix,!1,t)}render(t){const r=this.gl,e=t.params;r.bindBuffer(r.ARRAY_BUFFER,e.vertBuf),r.vertexAttribPointer(this.aVPoint,2,r.FLOAT,!1,0,0),r.bindBuffer(r.ARRAY_BUFFER,e.texBuf),r.vertexAttribPointer(this.aTCoord,2,r.FLOAT,!1,0,0),r.activeTexture(r.TEXTURE0),r.bindTexture(r.TEXTURE_2D,e.texture),r.uniform1i(this.uSampler,0),r.drawArrays(e.drawMode,0,e.vertCount)}}module.exports=SpriteShader;"},"sprite-params.js":{"/code":"const{getTexture:getTexture}=require(\"./texture\");class SpriteParams{constructor(t,e,r,s){this.gl=t,this.texBuf=t.createBuffer(),this.texture=getTexture(t,r,s),this.update(e)}update(t){const e=t.reduce((t,e)=>(t.push(e.x,e.y),t),[]);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.texBuf),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(e),this.gl.STATIC_DRAW)}}module.exports=SpriteParams;"},"texture.js":{"/code":"function getTexture(e,t,E){if(!textures.has(t)){const T=e.createTexture();e.bindTexture(e.TEXTURE_2D,T),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!0),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t);const r=E?e.LINEAR:e.NEAREST;e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,r),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST_MIPMAP_LINEAR),e.generateMipmap(e.TEXTURE_2D),textures.set(t,T)}return textures.get(t)}const textures=new Map;module.exports={getTexture:getTexture};"}},"vector":{"vector-material.js":{"/code":"const VectorParams=require(\"./vector-params\"),VectorShader=require(\"./vector-shader\");class VectorMaterial{constructor(r){this.colors=r,this.shaderType=VectorShader}update(r){this.colors=r,this.params&&this.params.update(r)}getParams(r){return this.params||(this.params=new VectorParams(r,this.colors)),this.params}}module.exports=VectorMaterial;"},"vector-shader.js":{"/code":"const ShaderProgram=require(\"../core/shader-program\"),vectorVertShader=`\\n\\tattribute vec2 aVPoint;\\n\\tattribute vec4 aVColor;\\n\\tuniform mat4 uMVMatrix;\\n\\tuniform mat4 uPMatrix;\\n\\tvarying highp vec4 vColor;\\n\\tvoid main() {\\n\\t\\tgl_Position = uPMatrix * uMVMatrix * vec4(aVPoint, 0, 1);\\n\\t\\tvColor = aVColor;\\n\\t}\\n`,vectorFragShader=`\\n\\tvarying highp vec4 vColor;\\n\\tvoid main() {\\n\\t\\tgl_FragColor = vColor;\\n\\t}\\n`;class VectorShader extends ShaderProgram{constructor(t){super(t,vectorVertShader,vectorFragShader),this.aVPoint=t.getAttribLocation(this.program,\"aVPoint\"),t.enableVertexAttribArray(this.aVPoint),this.aVColor=t.getAttribLocation(this.program,\"aVColor\"),t.enableVertexAttribArray(this.aVColor),this.uPMatrix=t.getUniformLocation(this.program,\"uPMatrix\"),this.uMVMatrix=t.getUniformLocation(this.program,\"uMVMatrix\")}setProjection(t){this.gl.uniformMatrix4fv(this.uPMatrix,!1,t)}setModelView(t){this.gl.uniformMatrix4fv(this.uMVMatrix,!1,t)}render(t){const r=this.gl,o=t.params;r.bindBuffer(r.ARRAY_BUFFER,o.vertBuf),r.vertexAttribPointer(this.aVPoint,2,r.FLOAT,!1,0,0),r.bindBuffer(r.ARRAY_BUFFER,o.colorBuf),r.vertexAttribPointer(this.aVColor,4,r.FLOAT,!1,0,0),r.drawArrays(o.drawMode,0,o.vertCount)}}module.exports=VectorShader;"},"vector-params.js":{"/code":"class VectorParams{constructor(t,r){this.gl=t,this.colorBuf=t.createBuffer(),this.update(r)}update(t){const r=t.reduce((t,r)=>(t.push(r.r,r.g,r.b,r.a),t),[]);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.colorBuf),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(r),this.gl.STATIC_DRAW)}}module.exports=VectorParams;"}},"shape":{"shape.js":{"/code":"function mapDrawMode(a,e){switch(e){case Shape.points:return a.POINTS;case Shape.lines:return a.LINES;case Shape.lineStrip:return a.LINE_STRIP;case Shape.lineLoop:return a.LINE_LOOP;case Shape.triangles:return a.TRIANGLES;case Shape.triangleStrip:return a.TRIANGLE_STRIP;case Shape.triangleFan:return a.TRIANGLE_FAN;default:throw new Error(`unknown draw mode: ${e}`)}}const ShapeParams=require(\"./shape-params\");class Shape{constructor(a,e=Shape.triangleFan){this.verts=a,this.drawMode=e}update(a){this.verts=a,this.params&&this.params.update(a)}getParams(a){if(!this.params){const e=mapDrawMode(a,this.drawMode);this.params=new ShapeParams(a,this.verts,e)}return this.params}}Shape.points=0,Shape.lines=1,Shape.lineStrip=2,Shape.lineLoop=3,Shape.triangles=4,Shape.triangleStrip=5,Shape.triangleFan=6,module.exports=Shape;"},"shape-params.js":{"/code":"class ShapeParams{constructor(t,e,s){this.gl=t,this.vertCount=e.length,this.center=[0,0],this.vertBuf=t.createBuffer(),this.drawMode=s,this.update(e)}update(t){this.center[0]=0,this.center[1]=0;for(const e of t)this.center[0]+=e.x,this.center[1]+=e.y;this.center[0]/=t.length,this.center[1]/=t.length;const e=t.reduce((t,e)=>(t.push(e.x,e.y),t),[]);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vertBuf),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(e),this.gl.STATIC_DRAW)}}module.exports=ShapeParams;"}}}},"/deps":["gl-matrix"]}